<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>Something is Nothing</subtitle>
  <link href="http://amadeus-z.github.io/atom.xml" rel="self"/>
  
  <link href="http://amadeus-z.github.io/"/>
  <updated>2022-12-19T13:08:43.560Z</updated>
  <id>http://amadeus-z.github.io/</id>
  
  <author>
    <name>Amadeus</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Chapter_2</title>
    <link href="http://amadeus-z.github.io/2022/12/19/Chapter-2/"/>
    <id>http://amadeus-z.github.io/2022/12/19/Chapter-2/</id>
    <published>2022-12-19T13:07:36.000Z</published>
    <updated>2022-12-19T13:08:43.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Chapter-2-Equations-Systems"><a href="#Chapter-2-Equations-Systems" class="headerlink" title="Chapter_2_Equations Systems"></a>Chapter_2_Equations Systems</h1><h2 id="Direct-Method"><a href="#Direct-Method" class="headerlink" title="Direct Method"></a>Direct Method</h2><h3 id="Gaussian-elimination"><a href="#Gaussian-elimination" class="headerlink" title="Gaussian elimination"></a>Gaussian elimination</h3><p>After the elimination is completed, the tableau is upper triangular:</p><script type="math/tex; mode=display">\begin{pmatrix} a_{11} & a_{12} & ... & a_{1n} & | & b_{1} \\ 0 & a_{22} & ... & a_{2n} & | & b_{2} \\ \vdots & \vdots & \ddots & \vdots & | & \vdots \\ 0 & 0 & ... & a_{nn} & | & b_{n} \end{pmatrix}</script><h3 id="LU-Factorization"><a href="#LU-Factorization" class="headerlink" title="LU Factorization"></a>LU Factorization</h3><h4 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h4><p>An $m\times n$ matrix $L$ is Lower-triangular if its entries satisfy $l_{ij}=0$ for $i<j$. An $m\times n$ matrix $U$ is Upper-triangular if its entries satisfy $u_{ij}=0$ for $i>j$ </p><p>Let $L_{ij}(-c)$ denote the matrix:</p><script type="math/tex; mode=display">\begin{pmatrix} 1 & 0&0 \\ -c & 1&0 \\ 0&0 &1 \\ \end{pmatrix}</script><p>Applay to $\forall$ matrix A:</p><script type="math/tex; mode=display">\begin{pmatrix} 1 & 0&0 \\ -c & 1&0 \\ 0&0 &1 \\ \end{pmatrix}\begin{pmatrix} a_{11} & a_{12}&a_{13} \\ a_{21} & a_{22}&a_{23} \\ a_{31}&a_{32} &a_{33} \\ \end{pmatrix}=\begin{pmatrix} a_{11} & a_{12}&a_{13} \\ a_{21}-ca_{11} & a_{22}-ca_{12}&a_{23}-ca_{13} \\ a_{31}&a_{32} &a_{33} \end{pmatrix}</script><p>Since $L_{ij}(-c)^{-1}=L_{ij}(c)\Rightarrow L_{ij}(-c) A=U_{A}\Rightarrow A=L_{ij}(c)U_{A}$</p><p>since $\begin{pmatrix} 1 &amp; 0&amp;0 \\ c_{1} &amp; 1&amp;0 \\ 0&amp;0 &amp;1 \\ \end{pmatrix}\begin{pmatrix} 1 &amp; 0&amp;0 \\ 0 &amp; 1&amp;0 \\ c_{2}&amp;0 &amp;1 \\ \end{pmatrix}\begin{pmatrix} 1 &amp; 0&amp;0 \\ 0 &amp; 1&amp;0 \\ 0&amp;c_{3} &amp;1 \\ \end{pmatrix}=\begin{pmatrix} 1 &amp; 0&amp;0 \\ c_{1} &amp; 1&amp;0 \\ c_{2}&amp;c_{3} &amp;1 \\ \end{pmatrix}$</p><p>$\Rightarrow \forall A=LU$<br>$\Rightarrow Ax=B\Leftrightarrow L(Ux)=B$, First solve $Lu=b$ for $u$, then solve $Ux=u$ for $x$.</p><h4 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h4><p>$to \ be \ continued$ </p><h3 id="PA-LU-Factorization"><a href="#PA-LU-Factorization" class="headerlink" title="PA=LU Factorization"></a>PA=LU Factorization</h3><h4 id="Partial-pivoting-protocol"><a href="#Partial-pivoting-protocol" class="headerlink" title="Partial pivoting protocol"></a>Partial pivoting protocol</h4><p>Choose the biggest entry to eliminate the column<br>$\Leftrightarrow$ if $|a_{pj}|\ge |a_{ij}|$ for all $i$ , Exchange the $p$th row to the first row and eliminate the $j$th column.</p><h4 id="Permutation-matrix"><a href="#Permutation-matrix" class="headerlink" title="Permutation matrix"></a>Permutation matrix</h4><p>A permutation matrix is an $n\times n$ matrix consisting of all zeros, except for a single 1 in every row and column. Such as $\begin{pmatrix} 1 &amp; 0&amp;0 \\ 0 &amp; 0&amp;1 \\ 0&amp;1 &amp;0 \\ \end{pmatrix}$.</p><h4 id="PA-LU"><a href="#PA-LU" class="headerlink" title="PA=LU"></a>PA=LU</h4><p>Let permutation matrix $P$ with $A$ to establish a matrix after partial pivoting protocol.<br>$PAx=Pb\Rightarrow LUx=Pb\Rightarrow$ </p><ol><li>$Lc=Pb$ for $c$. </li><li>$Ux=c$ for $x$.</li></ol><h4 id="Euler-Bernoulli-Beam"><a href="#Euler-Bernoulli-Beam" class="headerlink" title="Euler-Bernoulli Beam"></a>Euler-Bernoulli Beam</h4><p>$to \ be \ continued$</p><h2 id="Iterative-Methods"><a href="#Iterative-Methods" class="headerlink" title="Iterative Methods"></a>Iterative Methods</h2><h3 id="Jacobi-Method"><a href="#Jacobi-Method" class="headerlink" title="Jacobi Method"></a>Jacobi Method</h3><h4 id="Definition-1"><a href="#Definition-1" class="headerlink" title="Definition"></a>Definition</h4><p>A form of FPI for a system of equations.<br>Let $D$ denote the main diagonal of $A$. Then $A=L+D+U\Rightarrow (L+D+U)x=b\Rightarrow x=D^{-1}(b-(L+U)x)$ .<br>$x_{0}=\text{initial vector}$<br>$x_{k+1}=D^{-1}(b-(L+U)x_{k})$</p><h4 id="Strictly-diagonally-dominant"><a href="#Strictly-diagonally-dominant" class="headerlink" title="Strictly diagonally dominant"></a>Strictly diagonally dominant</h4><p>The $n\times n$ matrix $A=(a_{ij})$ is strictly diagonally dominant if $\forall 1\le i\le n,|a_{ii}|\ge \sum\limits_{j\ne i}|a_{ij}|$ </p><h4 id="Convergence"><a href="#Convergence" class="headerlink" title="Convergence"></a>Convergence</h4><p>If the $n\times n$ matrix $A$ is strictly diagonally dominant, then</p><ol><li>$A$ is a nonsingular matrix</li><li>The Jacobi Method applied to $Ax=b$ converges to the unique solution</li></ol><h3 id="Gauss-Seidel-Method"><a href="#Gauss-Seidel-Method" class="headerlink" title="Gauss-Seidel Method"></a>Gauss-Seidel Method</h3><p>Difference from Jacobi method: the most recently updated values of the unknowns are used at each step.</p><h4 id="Definition-2"><a href="#Definition-2" class="headerlink" title="Definition"></a>Definition</h4><p>$x_{0}=\text{initial vector}$<br>$(L+D)x_{k+1}=-Ux_{k}+b$<br>$x_{k+1}=D^{-1}(b-Ux_{k}-Lx_{k+1})$</p><h4 id="Convergence-1"><a href="#Convergence-1" class="headerlink" title="Convergence"></a>Convergence</h4><p>If the $n\times n$ matrix $A$ is strictly diagonally dominant, then</p><ol><li>$A$ is a nonsingular matrix</li><li>The Gauss-Seidel applied to $Ax=b$ converges to a solution</li></ol><h4 id="Successive-Over-Relaxation-SOR"><a href="#Successive-Over-Relaxation-SOR" class="headerlink" title="Successive Over-Relaxation (SOR)"></a>Successive Over-Relaxation (SOR)</h4><p>A method to speed the convergence of Gauss-Seidel method.<br>$to \ be \ continued$</p><h3 id="Convergence-2"><a href="#Convergence-2" class="headerlink" title="Convergence"></a>Convergence</h3><h4 id="sparse-matrix-computations"><a href="#sparse-matrix-computations" class="headerlink" title="sparse matrix computations"></a>sparse matrix computations</h4><p>$to \ be \ continued$</p><h2 id="Methods-for-symmetric-positive-definite-matrices"><a href="#Methods-for-symmetric-positive-definite-matrices" class="headerlink" title="Methods for symmetric positive-definite matrices"></a>Methods for symmetric positive-definite matrices</h2><h3 id="Symmetric-positive-definite-matrices"><a href="#Symmetric-positive-definite-matrices" class="headerlink" title="Symmetric positive-definite matrices"></a>Symmetric positive-definite matrices</h3><h4 id="Definition-3"><a href="#Definition-3" class="headerlink" title="Definition"></a>Definition</h4><p>The $n\times n$ matrix $A$ is <strong>symmetric</strong> if $A^{T}=A$.<br>The matrix $A$ is <strong>positive-definite</strong> if $x^{T}Ax&gt;0$ for all vectors $x\ne 0$</p><h4 id="Property"><a href="#Property" class="headerlink" title="Property"></a>Property</h4><ol><li>If the $n\times n$ matrix $A$ is symmetric, then $A$ is positive-definite $\Leftrightarrow$ all of its <strong>eigenvalues</strong> are positive</li><li>If $A$ is $n\times n$ symmetric positive-definite and $X$ is an $n\times m$ matrix of full rank with $n\ge m$, then $X^{T}AX$ is $m\times m$ symmetric positive-definite.</li><li>Any <strong>principal submatrix</strong> of a symmetric positive-definite matrix is symmetric positive-definit</li></ol><h3 id="Cholesky-factorization"><a href="#Cholesky-factorization" class="headerlink" title="Cholesky factorization"></a>Cholesky factorization</h3><h4 id="Theorem"><a href="#Theorem" class="headerlink" title="Theorem"></a>Theorem</h4><p>If $A$ is a symmetric positive-definite $n\times n$ matrix, then there exists an upper triangular $n\times n$ matrix $R$ such that $A=R^{T}R$</p><p><strong>Example</strong>:<br>$A=\begin{pmatrix}a  &amp; b \\ b &amp; c \end{pmatrix}=\begin{pmatrix} \sqrt{a}  &amp; 0 \\ \frac{b}{\sqrt{a}} &amp; \sqrt{c-\frac{b^{2}}{a}} \end{pmatrix}\begin{pmatrix} \sqrt{a}  &amp; \frac{b}{\sqrt{a}} \\ 0 &amp; \sqrt{c-\frac{b^{2}}{a}} \end{pmatrix}=R^{T}R$</p><h3 id="Conjugate-Gradient-Method"><a href="#Conjugate-Gradient-Method" class="headerlink" title="Conjugate Gradient Method"></a>Conjugate Gradient Method</h3><p>$to \ be \ continued$</p><h2 id="Nonlinear-Systems-of-Equations"><a href="#Nonlinear-Systems-of-Equations" class="headerlink" title="Nonlinear Systems of Equations"></a>Nonlinear Systems of Equations</h2><h3 id="Multivariate-Newton’s-Method"><a href="#Multivariate-Newton’s-Method" class="headerlink" title="Multivariate Newton’s Method"></a>Multivariate Newton’s Method</h3><h4 id="Definition-4"><a href="#Definition-4" class="headerlink" title="Definition"></a>Definition</h4><p>Denote a system of equation ($f_{i}(u,v,w)=0$) by $F(u,v,w)=(f_{i},…)$.<br>The Taylor expansion for vector-valued functions around $x_{0}$ is:<br>$F(x)=F(x_{0})+DF(x_{0})(x-x_{0})+O(x-x_{0})^{2}$<br>$\Rightarrow 0=F(r)\approx F(x_{0})+DF(x_{0})(r-x_{0})$<br>$\Rightarrow \ \ x_{0}=\text{initial vector}$<br>$\Rightarrow \ \ x_{k+1}=x_{k}-(DF(x_{k}))^{-1}F(x_{k})$</p><h3 id="Broyden’s-Method"><a href="#Broyden’s-Method" class="headerlink" title="Broyden’s Method"></a>Broyden’s Method</h3><p>$to \ be \ continued$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Chapter-2-Equations-Systems&quot;&gt;&lt;a href=&quot;#Chapter-2-Equations-Systems&quot; class=&quot;headerlink&quot; title=&quot;Chapter_2_Equations Systems&quot;&gt;&lt;/a&gt;Chapt</summary>
      
    
    
    
    
    <category term="Numerical" scheme="http://amadeus-z.github.io/tags/Numerical/"/>
    
  </entry>
  
  <entry>
    <title>Chapter_1</title>
    <link href="http://amadeus-z.github.io/2022/12/16/Chapter-1/"/>
    <id>http://amadeus-z.github.io/2022/12/16/Chapter-1/</id>
    <published>2022-12-16T13:45:45.000Z</published>
    <updated>2022-12-16T13:47:30.193Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Bisection-Method"><a href="#Bisection-Method" class="headerlink" title="Bisection Method"></a>Bisection Method</h3><p><strong>Code</strong>:<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xc</span>=<span class="title">bisect</span><span class="params">(f,a,b,tol)</span></span></span><br><span class="line">fa=f(a)</span><br><span class="line">fb=f(b)</span><br><span class="line"><span class="keyword">while</span> (b-a)/<span class="number">2</span>&gt;tol</span><br><span class="line">c=(a+b)/<span class="number">2</span>;</span><br><span class="line">fc=f(c);</span><br><span class="line"><span class="keyword">if</span> f(c)==<span class="number">0</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">sign</span>(fc)*<span class="built_in">sign</span>(fa)&lt;<span class="number">0</span></span><br><span class="line">b=c;</span><br><span class="line">fb=f(c);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a=c;</span><br><span class="line">fa=f(c);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">xc=(a+b)/<span class="number">2</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>Solution error $=|x_{c}-r|&lt;\frac{b-a}{2^{n+1}}$ </p><h3 id="Fixed-Point-Iteration"><a href="#Fixed-Point-Iteration" class="headerlink" title="Fixed-Point Iteration"></a>Fixed-Point Iteration</h3><h4 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h4><p>fixed point $r$ of function $g$ : $g(r)=r\Leftrightarrow g(r)-r=0$ </p><p>Let $x_{i+1}=g(x_{i})$, if $g$ continuous and $x_{i}\rightarrow r$ , Then:</p><script type="math/tex; mode=display">g(r)=g(\lim x_{i})=\lim g(x_{i})=\lim x_{i+1}=r</script><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xc</span>=<span class="title">fpi</span><span class="params">(g,x0,k)</span></span></span><br><span class="line">x(<span class="number">1</span>)=x0;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:k</span><br><span class="line">x(<span class="built_in">i</span>+<span class="number">1</span>)=g(x(<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">xc=x(k+<span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Linear-Convergence"><a href="#Linear-Convergence" class="headerlink" title="Linear Convergence"></a>Linear Convergence</h4><p>Let $e_{i}=|r-x_{i}|$ denote the error at the step $i$ of an iterative method. If</p><script type="math/tex; mode=display">\lim\limits_{i\rightarrow\infty}\frac{e_{i+1}}{e_{i}}=S<1</script><p>Then the method is said to obey Linear Convergence with rate $S$.</p><h4 id="Theorem"><a href="#Theorem" class="headerlink" title="Theorem"></a>Theorem</h4><p>$g$ is continuously differentiable with $g(r)=r$ such that $S=|g’(r)|&lt;1$ .<br>Then FPI(Fixed-Point Iteration) converges linearly with rate $S$ to the fixed point $r$ for initial guesses sufficiently close to $r$.</p><p><strong>Proof:</strong><br>$x_{i+1}-r=g(x_{i})-g(r)=g’(c_{i})(x_{i}-r)$<br>$\Rightarrow e_{i+1}=|g’(c_{i})|e_{i}$</p><h4 id="Locally-Convergent"><a href="#Locally-Convergent" class="headerlink" title="Locally Convergent"></a>Locally Convergent</h4><p>An iterative method is called <strong>locally convergent</strong> to $r$ if the method converges to $r$ for initial guesses sufficiently close to $r$.</p><h4 id="Stopping-Criteria"><a href="#Stopping-Criteria" class="headerlink" title="Stopping Criteria"></a>Stopping Criteria</h4><p>For a set tolerance <strong>TOL</strong>, define  some error stopping criterion:</p><script type="math/tex; mode=display">f(x_{i},x_{i+1})<TOL</script><h3 id="Sensitivity"><a href="#Sensitivity" class="headerlink" title="Sensitivity"></a>Sensitivity</h3><h4 id="Define"><a href="#Define" class="headerlink" title="Define"></a>Define</h4><p>Assume we find a root $r$ of $f(x)=0$, with a small change $\epsilon g(x)$ is made to the input. Let $\Delta r$ be the corresponding change in the root such that</p><script type="math/tex; mode=display">f(r+\Delta r)+\epsilon g(r+\Delta r)=0</script><p>Expanding in Talyor polynomials $\Rightarrow$</p><script type="math/tex; mode=display">\Delta r\approx-\frac{\epsilon g(r)}{f'(r)}</script><p><strong>Error magnification factor</strong>:</p><script type="math/tex; mode=display">\frac{\text{relative forward error}}{\text{relative backward error}}=\frac{\Delta r/r}{\epsilon g(r)/g(r)}=|\frac{g(r)}{rf'(r)}|</script><h3 id="Newton’s-Method"><a href="#Newton’s-Method" class="headerlink" title="Newton’s Method"></a>Newton’s Method</h3><h4 id="Definition-1"><a href="#Definition-1" class="headerlink" title="Definition"></a>Definition</h4><p>$f’(x_{0})(x-x_{0})=0-f(x_{0})\Rightarrow x=x_{0}-\frac{f(x_{0})}{f’(x_{0})}\Rightarrow  \begin{align}  &amp; x_{0}=\text{initial guess} \\ &amp; x_{i+1}=x_{i}-\frac{f(x_{i})}{f’(x_{i})}\end{align}$</p><h4 id="Quadratic-convergence"><a href="#Quadratic-convergence" class="headerlink" title="Quadratic convergence"></a>Quadratic convergence</h4><p>The iteration is quadratically convergent if</p><script type="math/tex; mode=display">M=\lim\limits_{i\rightarrow\infty} \frac{e_{i+1}}{e_{i}^{2}}<\infty</script><p>By Taylor’s theorem: $f(r)=f(x_{i})+(r-x_{i})f’(x_{i})+\frac{(r-x_{i})^{2}}{2}f’’(c_{i})$<br>$\Rightarrow x_{i+1}-r=\frac{(r-x_{i})^{2}}{2}\frac{f’’(c_{i})}{f’(x_{i})}\Rightarrow \frac{e_{i+1}}{e_{i}^{2}}=|\frac{f’’(c_{i})}{2f’(x_{i})}|\Rightarrow \lim\limits_{i\rightarrow\infty} \frac{e_{i+1}}{e_{i}^{2}}=|\frac{f’’(r)}{2f’(r)}|$ </p><h4 id="Modified-Newton’s-Method"><a href="#Modified-Newton’s-Method" class="headerlink" title="Modified Newton’s Method"></a>Modified Newton’s Method</h4><p>If $f$ is $(m+1)$-times continuously differentiable on $[a,b]$, which contains a root $r$ of multiplicity $m&gt;1$, then <strong>Modified Newton’s Method</strong></p><script type="math/tex; mode=display">x_{i+1}=x_{i}-\frac{mf(x_{i})}{f'(x_{i})}</script><p>converges locally and quadratically to $r$.</p><h3 id="Secant-Method"><a href="#Secant-Method" class="headerlink" title="Secant Method"></a>Secant Method</h3><h4 id="Definition-2"><a href="#Definition-2" class="headerlink" title="Definition"></a>Definition</h4><p>Replace $f’(x_{i})$ in Newton’s Method by $\frac{f(x_{i})-f(x_{i-1})}{x_{i}-x_{i-1}}$<br>$x_{0},x_{1}=\text{initial guesses}$<br>$x_{i+1}=x_{i}-\frac{f(x_{i})(x_{i}-x_{i-1})}{f(x_{i})-f(x_{i-1})}$<br>$e_{i+1}\approx |\frac{f’’(r)}{2f’(r)}|e_{i}e_{i-1}\approx |\frac{f’’(r)}{2f’(r)}|^{\alpha-1}e_{i}^{\alpha}$                      $\alpha=\frac{1+\sqrt{5}}{2}$   </p><h4 id="Method-of-False-Position-Regula-Falsi"><a href="#Method-of-False-Position-Regula-Falsi" class="headerlink" title="Method of False Position / Regula Falsi"></a>Method of False Position / Regula Falsi</h4><p>Replace the midpoint in Bisection Method by Secant Method:<br>$c=a-\frac{f(a)(a-b)}{f(a)-f(b)}=\frac{bf(a)-af(b)}{f(a)-f(b)}$ </p><h4 id="Muller’s-Method"><a href="#Muller’s-Method" class="headerlink" title="Muller’s Method"></a>Muller’s Method</h4><p><a href="https://en.wikipedia.org/wiki/Muller%27s_method">wiki</a></p><h4 id="Inverse-Quadratic-Interpolation-IQI"><a href="#Inverse-Quadratic-Interpolation-IQI" class="headerlink" title="Inverse Quadratic Interpolation (IQI)"></a>Inverse Quadratic Interpolation (IQI)</h4><p><a href="https://en.wikipedia.org/wiki/Inverse_quadratic_interpolation">wiki</a></p><h4 id="Brent’s-Method"><a href="#Brent’s-Method" class="headerlink" title="Brent’s Method"></a>Brent’s Method</h4><p><a href="https://en.wikipedia.org/wiki/Brent%27s_method">wki</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Bisection-Method&quot;&gt;&lt;a href=&quot;#Bisection-Method&quot; class=&quot;headerlink&quot; title=&quot;Bisection Method&quot;&gt;&lt;/a&gt;Bisection Method&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Code&lt;/</summary>
      
    
    
    
    
    <category term="Numerical" scheme="http://amadeus-z.github.io/tags/Numerical/"/>
    
  </entry>
  
  <entry>
    <title>Chapter_0</title>
    <link href="http://amadeus-z.github.io/2022/12/13/Chapter-0/"/>
    <id>http://amadeus-z.github.io/2022/12/13/Chapter-0/</id>
    <published>2022-12-13T11:54:28.000Z</published>
    <updated>2022-12-13T12:16:48.815Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nested-multiplication-Horner’s-method"><a href="#Nested-multiplication-Horner’s-method" class="headerlink" title="Nested multiplication / Horner’s method"></a>Nested multiplication / Horner’s method</h3><p><strong>Example:</strong><br>$\begin{align}  P(x) &amp;=2x^{4}+3x^{3}-3x^{2}+5x-1\\ &amp;=-1+x(5+x(-3+x(3+x\cdot 2))) \end{align}$</p><p><strong>Code:</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% d: degree of polynomial</span></span><br><span class="line"><span class="comment">% c: coefficients array</span></span><br><span class="line"><span class="comment">% b: array of base points b</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span>=<span class="title">nest</span><span class="params">(d,c,x,b)</span></span></span><br><span class="line"><span class="keyword">if</span> nargin&lt;<span class="number">4</span></span><br><span class="line">b=<span class="built_in">zeros</span>(d,<span class="number">1</span>); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">y = c(d+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=d:<span class="number">-1</span>:<span class="number">1</span></span><br><span class="line">y = =y.*(x-b(<span class="built_in">i</span>))+c(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Decimal-to-Binary"><a href="#Decimal-to-Binary" class="headerlink" title="Decimal to Binary"></a>Decimal to Binary</h3><p><strong>Example</strong>: $(0.7)_{10}\rightarrow (.1\overline{0110})_{2}$</p><p>$\begin{align} .7\times 2=.4+1 \\ .4\times2=.8+0 \\ .8\times 2=.6+1 \\ .6\times 2=.2+1 \\ .2\times 2=.4+0 \\ .4\times 2=.8+0 \end{align}$</p><h3 id="Binary-to-Decimal"><a href="#Binary-to-Decimal" class="headerlink" title="Binary to Decimal"></a>Binary to Decimal</h3><p><strong>Example 1</strong>: $(.1011)_{2}\rightarrow (\frac{11}{16})_{10}$ </p><p>$(.1011)_{2}=1\cdot \frac{1}{2}^{1}+0\cdot \frac{1}{2}^{2}+1\cdot \frac{1}{2}^{3}+1\cdot \frac{1}{2}^{4}=(\frac{11}{16})_{10}$  </p><p><strong>Example 2</strong>: $(.\overline{1011})_{2}$</p><p>Let $x=(.\overline{1011})_{2}\Rightarrow 2^{4}x=(1011.\overline{1011})_{2}\Rightarrow (2^{4}-1)x=(1011)_{2}=(11)_{10}$</p><h3 id="Floating-Point-Representation-of-Real-Numbers"><a href="#Floating-Point-Representation-of-Real-Numbers" class="headerlink" title="Floating Point Representation of Real Numbers"></a>Floating Point Representation of Real Numbers</h3><div class="table-container"><table><thead><tr><th>Precision</th><th>sign</th><th>exponent</th><th>mantissa</th></tr></thead><tbody><tr><td>single</td><td>1</td><td>8</td><td>23</td></tr><tr><td>double</td><td>1</td><td>11</td><td>52</td></tr><tr><td>long double</td><td>1</td><td>15</td><td>64</td></tr></tbody></table></div><h3 id="The-Intermediate-Value-Theorem"><a href="#The-Intermediate-Value-Theorem" class="headerlink" title="The Intermediate Value Theorem"></a>The Intermediate Value Theorem</h3><p><a href="https://en.wikipedia.org/wiki/Intermediate_value_theorem">wiki</a></p><h3 id="The-Mean-Value-Theorem"><a href="#The-Mean-Value-Theorem" class="headerlink" title="The Mean Value Theorem"></a>The Mean Value Theorem</h3><p><a href="https://en.wikipedia.org/wiki/Mean_value_theorem">wiki</a></p><h3 id="Taylor’s-Theorem"><a href="#Taylor’s-Theorem" class="headerlink" title="Taylor’s Theorem"></a>Taylor’s Theorem</h3><p><a href="https://en.wikipedia.org/wiki/Taylor%27s_theorem">wiki</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Nested-multiplication-Horner’s-method&quot;&gt;&lt;a href=&quot;#Nested-multiplication-Horner’s-method&quot; class=&quot;headerlink&quot; title=&quot;Nested multiplicat</summary>
      
    
    
    
    
    <category term="Numerical" scheme="http://amadeus-z.github.io/tags/Numerical/"/>
    
  </entry>
  
  <entry>
    <title>Anything</title>
    <link href="http://amadeus-z.github.io/2022/11/02/Anything/"/>
    <id>http://amadeus-z.github.io/2022/11/02/Anything/</id>
    <published>2022-11-02T08:08:13.000Z</published>
    <updated>2022-11-02T08:08:13.641Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
